/* 4-Zone CRT Architecture - Fixed Analogue Machine Interface */
.crt-shell {
  position: relative;
  padding: 1.5rem;
}

.crt-shell__header {
  margin-bottom: 1rem;
}

.crt-shell__screen {
  position: relative;
}

.crt-shell__keypad {
  position: relative;
}

.crt-shell__footer {
  position: relative;
}

.crt-shell__screen-surface {
  box-shadow:
    inset 0 0 50px rgba(0, 0, 0, 0.8),
    0 0 20px rgba(0, 0, 0, 0.5);
  background: radial-gradient(ellipse at center, #0a0e14 0%, #000000 100%);
}

.crt-shell__overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 2;
  pointer-events: none;
}

.crt-shell__overlay--scanlines {
  background: repeating-linear-gradient(
    to bottom,
    transparent 0%,
    rgba(255, 255, 255, 0.05) 1px,
    transparent 2px
  );
  animation: scanline-flicker 3s linear infinite;
}

@keyframes scanline-flicker {
  0%, 100% {
    opacity: 0.95;
  }
  50% {
    opacity: 0.85;
  }
}

@media (prefers-reduced-motion: reduce) {
  .crt-shell__overlay--scanlines {
    animation: none;
  }
}

/* Orbital System - Orbs following red-line path around keypad */
.orbital-system {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
}

.orbital-orb {
  --orbital-radius: 200px;
  --orbital-center-x: 50%;
  --orbital-center-y: 50%;
}

/* Spawn animation: orb appears and enters orbital path */
@keyframes orbital-spawn {
  0% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.3);
  }
  100% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

/* Orbital motion: smooth path following red-line curve around keypad perimeter */
@keyframes orbital-perimeter {
  0% {
    transform: rotate(0deg) translateY(calc(var(--orbital-radius) * -1)) rotate(0deg);
  }
  100% {
    transform: rotate(360deg) translateY(calc(var(--orbital-radius) * -1)) rotate(-360deg);
  }
}

@media (prefers-reduced-motion: reduce) {
  .orbital-orb {
    animation: none !important;
  }
}
