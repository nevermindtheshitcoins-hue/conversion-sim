'use client';

import type { GenerateScenarioQuestionsOutput } from '@/ai/flows/generate-scenario-questions';
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import { Badge } from "@/components/ui/badge";
import { ListChecks } from 'lucide-react';

interface QuestionDisplayProps {
  questionsData: GenerateScenarioQuestionsOutput;
}

export function QuestionDisplay({ questionsData }: QuestionDisplayProps) {
  const { questions } = questionsData;
  return (
    <div className="space-y-6">
      <div className="flex items-center gap-3">
        <ListChecks className="w-8 h-8 text-primary"/>
        <h2 className="text-2xl font-headline text-foreground">Generated Questions</h2>
      </div>
      <p className="text-muted-foreground">
        Here are the scenario-based questions generated by the AI. Click on each question to view the options.
      </p>
      <Accordion type="single" collapsible className="w-full">
        {questions.map((q, index) => (
          <AccordionItem value={`item-${index}`} key={index}>
            <AccordionTrigger className="text-left font-semibold text-foreground hover:no-underline">
              {index + 1}. {q.question}
            </AccordionTrigger>
            <AccordionContent>
              <ul className="space-y-3 pl-2 pt-2">
                {q.options.map((option, optionIndex) => (
                  <li key={optionIndex} className="flex items-center gap-3">
                    <Badge variant="secondary" className="font-mono">{String.fromCharCode(65 + optionIndex)}</Badge>
                    <span className="text-foreground/90">{option}</span>
                  </li>
                ))}
              </ul>
            </AccordionContent>
          </AccordionItem>
        ))}
      </Accordion>
    </div>
  );
}
